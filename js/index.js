// first, check to see whether localStorage even exists, and alert if not. Next, check to see if it holds data from a previous visit, and use that, splitting it back into an array because it saves as a string. Finally, if localStorage.nameList is empty, declare nameList; we'll save it to localStorage later if changes are made to it.
if (!window.localStorage) {
  alert("Sorry, we can't store your data locally. Changes to your channel list will be lost when you exit.");
} else if (localStorage.nameList !== undefined) {
  var nameList = localStorage.nameList.split(",");
} else {
  var nameList = ["OgamingSC2", "FreeCodeCamp", "ESL_SC2", "ThatMadProgrammer", "codingrainbow", "Programming"];
}

// Twitch doesn't have one API that accepts bulk submission of channel names and returns all of the data we need. It does have one, below, that takes bulk names, but only returns data on the ones that are online. Great, now we know what's online!
function buildList() {
  $.ajax({
    url: "https://api.twitch.tv/kraken/streams/?channel=" + nameList.toString() + "&stream_type=all",
    type: "GET",
    dataType: "json",
    headers: {
      "Client-ID": "r0a4q2vzw4htcq5h9hl5sl6r4ykk6vw"
    },
    success: function (data) {
      $("#chipList").html(""); //clear out contents from previous call
      for (var i = 0; i < data.streams.length; i++) {
        $("#chipList").append("<div class='chip row hoverable'> <a href='" + data.streams[i].channel.url + "' target='_blank'> <div class='col s1 logo'> <img src='" + data.streams[i].channel.logo + "'> </div><div class='col s2 truncate'>" + data.streams[i].channel.display_name + "</div><div class='col s8 truncate'>Online: " + data.streams[i].channel.status + "</div></a><div class='col s1'> <i id='" + data.streams[i].channel.display_name + "' class='close material-icons'>close</i> </div></div>");
      }
      // For the others, we'll need an individual call for each channel to get their logo, etc. Pseudocode: iterate through nameList. If the entry is the name of a div generated by the previous for loop, then "continue". Otherwise run a new API call and build a new div.
      for (var i = 0; i < nameList.length; i++) {
        if ($('#chipList').find('#' + nameList[i]).length) { // A jquery way of saying, "If a div by that ID has already been created in the DOM..."
          continue;
        } else {
          $.ajax({
            url: "https://api.twitch.tv/kraken/channels/" + nameList[i],
            type: "GET",
            headers: {
              'Client-ID': 'r0a4q2vzw4htcq5h9hl5sl6r4ykk6vw'
            },
            dataType: "json",
            success: function (data) {
              $("#chipList").append("<div class='chip row hoverable'><a href='" + data.url + "' target='_blank'><div class='col s1 logo'> <img src='" + data.logo + "'> </div><div class='col s2 truncate'>" + data.display_name + "</div><div class='col s8 truncate offline'>Offline: " + data.status + "</div></a><div class='col s1'> <i id='" + data.display_name + "' class='close material-icons'>close</i></div></div>");
            },
            error: function (jqXHR, textStatus, errorThrown) {
              $("#chipList").append("<div class='chip row hoverable'><a href='https://www.twitch.tv/' target='_blank'><div class='col s1 logo'> <img src='//static-cdn.jtvnw.net/jtv_user_pictures/xarth/404_user_150x150.png'></div><div class='col s2 truncate'>" + errorThrown + "</div><div class='col s8 truncate offline'>Error: " + jqXHR.responseJSON.message + "</div></a><div class='col s1'> <i id='" + nameList[i] + "' class='close material-icons'>close</i></div></div>");
            }
          });
        }
      }
    },
    error: function () {
      alert("Error, please try again");
    }

  });
}

// A function to search for channels:
$("#searchBox").submit(function (event) {
  event.preventDefault();
  $.ajax({
    url: "https://api.twitch.tv/kraken/search/channels?q=" + $("#search").val(),
    method: "GET",
    dataType: "json",
    headers: {
      "Client-ID": "r0a4q2vzw4htcq5h9hl5sl6r4ykk6vw"
    },
    success: function (data) {
      $("#searchResults").html(""); //clear out any results from previous searches
      for (var i = 0; i < data.channels.length; i++) {
        if (data.channels[i].logo === null) { //Some Twitch users never set a profile pic. Replace with the default one that Twitch uses.
          var logo = "//static-cdn.jtvnw.net/jtv_user_pictures/xarth/404_user_150x150.png";
        } else {
          logo = data.channels[i].logo;
        }
        if ((data.channels[i].game === null) || (data.channels[i].game === "")) {
          var game = "Topic not specified"; //Some users never set a "game", and at least one managed to set it to an empty string.
        } else {
          game = data.channels[i].game;
        }
        $("#searchResults").append("<div class='chip row hoverable result'><a href='" + data.channels[i].url + "' target='_blank'><div class='col s1 logo'><img src='" + logo + "'></div><div class='col s2 truncate'>" + data.channels[i].display_name + "</div><div class='col s8 truncate'>" + game + "</div></a><div class='col s1'> <i id='" + data.channels[i].display_name + "' class='close material-icons'>close</i></div></div>");
      }
      $('#searchModal').openModal({ //...open the modal...
        complete: buildList //... and, when you close it, run the list again
      });
    }
  });
})

// A function to update the nameList array when a search result is clicked:
$("#searchResults").on("click", ".result", function (event) {
  event.preventDefault(); //Don't open the link!
  $(this).hide();
  nameList.push(this.lastChild.lastChild.id); //You're clicking the chip (.result). The ID is on the <i>, inside the last <div>.
  localStorage.nameList = nameList;
});

// To remove IDs from nameList when someone clicks their close button:
$('#chipList').on('click', ".close", function () {
  nameList.splice(nameList.indexOf(this.id), 1);
  localStorage.nameList = nameList;
});

// To restore the starting contents of the list:
$("#reset").click(function () {
  nameList = ["OgamingSC2", "FreeCodeCamp", "ESL_SC2", "ThatMadProgrammer", "codingrainbow", "Programming"];
  localStorage.nameList = nameList;
  buildList();
});

$(document).ready(buildList); //This is where it all starts!